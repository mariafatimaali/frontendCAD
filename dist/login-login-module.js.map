{"version":3,"sources":["./src/app/_models/global.model.ts","./src/app/_services/authentication-service.service.ts","./src/app/login/login-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/login/login.module.ts"],"names":[],"mappings":"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","file":"login-login-module.js","sourcesContent":["export const RoleData = \n{\n    edit : String,\n    update : String,\n    delete : String\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { User } from '../_models/user';\n\n@Injectable({ providedIn: 'root'})\nexport class AuthenticationServiceService {\n  myHeader;\n  user = {\n    username : \"\",\n    password : \"\"\n  }\n  private currentUserSubject: BehaviorSubject<User>;\n  constructor(private http: HttpClient) \n  { \n    this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\n    this.myHeader = {\n      headers: {\n        \"content-type\":\"application/json\"\n      }\n    };\n\n  }\n\n\n  login(username,password) {\n    this.user.username = username;\n    this.user.password = password;\n    //console.log(JSON.stringify(this.user));\n   // apiURL='http://172.18.7.29:3000/branch';\n    return this.http.post('http://172.18.7.29:3000/login', this.user)\n   // return this.http.post('http://localhost:3000/login', this.user)\n    .pipe(map(user => {\n      // store user details and jwt token in local storage to keep user logged in between page refreshes\n      localStorage.setItem('isLoggedin', 'true');\n      return user;\n    }));\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { LoginComponent } from './login.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: LoginComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class LoginRoutingModule {}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\n// import { routerTransition } from '../router.animations';\nimport { AuthenticationServiceService } from '../_services/authentication-service.service';\nimport { User } from '../_models/user';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n// import { ToastrService } from 'ngx-toastr';\nimport { RoleData } from '../_models/global.model'\n// import { PersistenceService } from 'angular-persistence';\nimport  { RestService} from '../services/rest.service';\nimport { FormsModule } from '@angular/forms';\nimport { FormBuilder, FormGroup, FormControl, FormGroupDirective, Validators } from '@angular/forms';\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss'],\n    // animations: [routerTransition()]\n})\nexport class LoginComponent implements OnInit {\n    formGroup: FormGroup;\n    usernameFormControl = new FormControl('', [ Validators.required]);\n    passwordFormControl = new FormControl('', [Validators.required]);\n    //authenticationServiceService : AuthenticationServiceService;\n    // user : User;\n    @Input() users =\n        {\n            username: '',\n            password: ''\n        }\n\n    constructor(\n        private restService : RestService,\n        private formBuilder: FormBuilder,\n        private translate: TranslateService,\n      //  private toastr: ToastrService,\n        private authenticationServiceService: AuthenticationServiceService,\n        public router: Router,\n        private _snackBar: MatSnackBar,\n       // private persistenceService: PersistenceService\n\n    ) {\n\n    }\n    openSnackBar(message: string, action: string) {\n        this._snackBar.open(message, action, {\n          duration: 9000,\n        });\n        console.log(\"this\")\n    ;\n      }\n      multipleusers(){\nlocalStorage.clear();\n        if(localStorage.getItem(\"userFullName\")== null){\n      this.onLoggedin();\n      }\n      else {\n        alert(\"you are already logged in\")\n      }}    \n    ngOnInit() { this.formGroup= this.formBuilder.group({\n        'USERNAME':this.usernameFormControl,\n        'PASSWORD':this.passwordFormControl,\n  \n            });\n      }\n      totalUsers: Number = 1;\n    //  totalUsers : Number;\n    onLoggedin() {\n//alert(this.users.username);\n//alert(this.users.password)\n\n        this.authenticationServiceService.login(this.users.username, this.users.password)\n            .subscribe((response: any) => {\n            //  console.log(\"login\");\n            // console.log(response);\n               // console.log(response.roledata);\n                if (response.message == 'success') {\n                  //  alert(\"you are here\");\n                    localStorage.setItem('userFullName', response.data.cn);\n                    sessionStorage.setItem('userFullName', response.data.cn);\n                    sessionStorage.setItem('isLoggedin', 'true');\n                    this.router.navigate(['dashboard']);\n//                     this.totalUsers ==1\n// Number(localStorage.setItem('totalUsersCount', this.totalUsers.toString()));\n\n\n\n                    this.openSnackBar('User Logged in successfully','Sure');\n                   // this.toastr.success('Successfully Loggedin');\n                     RoleData.update = response.roledata.update;\n                                 RoleData.delete = response.roledata.delete;\n                   RoleData.edit = response.roledata.edit;\n                 //  console.log(RoleData);\n                  this.restService.setRoleData(response.roledata);\n                 localStorage.setItem('Edit',response.roledata.edit);\n                 localStorage.setItem('Delete',response.roledata.delete);\n                   localStorage.setItem('View',response.roledata.view);\n                    \n                   // console.log(localStorage.getItem('Roledata'));\n                    \n                   //    thisrsistenceService.set('delete', response.roledata.delete);\n                //    console.log(this.persistenceService.get('edit'));\n                }\n                else if(response.message=\"Unauthorized\"){\n                   // this.toastr.error(\"You are not authorized to view this page\");\n                 // alert(\"you are not authorized\");\n                  this.openSnackBar('User Id password is incorrect','Sure');\n                }\n                else {\n                  \n                  //  this.toastr.error(\"Incorrect Username or Password\");\n                    alert(\"Please enter correct username or password\")\n                    this.openSnackBar('Please enter correct username or password','Sure');\n                }\n            },\n            \n\n                error => {\n                    console.log(\"Error\");\n                }\n                \n      );\n\n                \n\n\n        //    .subscribe(\n        //        data => {\n        //            this.router.navigate(['dashboard']);\n        //        },\n        //        error => { \n        //            console.log(\"Error\");\n        //        });\n         \n    }\n\n}\n\n\n //localStorage.setItem('isLoggedin','true');\n       // this.router.navigate(['dashboard']);\n       // this.authenticationServiceService.login(this.users.username,this.users.password)","\n  <div style=\"background: url('src\\assets\\images\\HblTower.jpg) no-repeat center center fixed');\"></div>\n  <!-- <div style=\"background: url(src\\assets\\images\\HblTower.jpg') no-repeat center center fixed;\"</div> -->\n<div class=\"login-page\">\n   \n    <div class=\"content\">\n        <!-- <h1 class=\"app-name\">Sb Admin Material</h1> -->\n        <!-- <img src=\"assets/images/download.png\" width=\"1px\"  height=\"50px\" class=\"user-avatar\" /> -->\n        <form class=\"login-form\" fxFlex  >\n            <div class=\"text-center\">\n              \n                <img src=\"assets/images/HBLtower.png\" style=\"align-items:top;\" width=\"400px\"  height=\"300px\" class=\"user-avatar\" />\n                <h2 class=\"app-name\">CAD DIGITALIZED REPORTING</h2>\n            </div>\n            <div fxFlex  fxlayout=\"row\" fxlayout.lt-md=\"column\">\n                <div fxFlexFill>\n                    <mat-form-field class=\"w-100\">\n                        <div [formGroup]='formGroup'>\n                        <input  matInput type=\"text\" name=\"username\" formControlName='USERNAME' [(ngModel)]='users.username' placeholder=\"username\">\n                        </div>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div fxFlex  fxLayout=\"row\" fxLayout.lt-md=\"column\">\n                <div fxFlexFill>\n                    <mat-form-field class=\"w-100\">\n                        <div [formGroup]='formGroup'>\n                        <input matInput type=\"password\" name=\"password\" formControlName='PASSWORD' [(ngModel)]=\"users.password\"  id=\"\" placeholder=\"Password\">\n                        </div>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div fxFlex  fxLayout=\"row\" fxLayout.lt-md=\"column\" style=\"margin: 20px 0 30px 0\">\n                <div fxFlex>\n                    <!-- <mat-checkbox color=\"primary\">Remember Me</mat-checkbox> -->\n                </div>\n                <div fxFlex  fxLayoutAlign=\"end\">\n                    <!-- <a href=\"javascript:void(0)\">Forget Password</a> -->\n                </div>\n            </div>\n            <div fxFlex  fxLayout=\"row\" fxLayout.lt-md=\"column\">\n                <div fxFlexFill>\n                    <button style=\"\n                    background-color: #00AA97;\n                        height:48px ;\n                        width:400px !important;\n                        font-size:20px !important;\" mat-raised-button color=\"primary\" class=\"w-100\" (click)=\"multipleusers()\">Login</button>\n                </div>\n            </div>\n\n        </form>\n    </div>\n</div>\n<p style=\"align-content:centre;\">@Copyrights HBL 2020</p>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { LoginRoutingModule } from './login-routing.module';\nimport { LoginComponent } from './login.component';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        LoginRoutingModule,\n        MatInputModule,\n        MatCheckboxModule,\n        MatButtonModule,\n        MatSnackBarModule,\n        FlexLayoutModule.withConfig({addFlexToParent: false})\n    ],\n    declarations: [LoginComponent]\n})\nexport class LoginModule {}\n"],"sourceRoot":"webpack:///"}